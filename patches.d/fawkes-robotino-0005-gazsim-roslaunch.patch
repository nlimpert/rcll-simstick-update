diff -ur fawkes-robotino.p1/etc/scripts/gazsim.bash fawkes-robotino/etc/scripts/gazsim.bash
--- fawkes-robotino.p1/etc/scripts/gazsim.bash	2016-06-01 13:12:29.458500942 +0200
+++ fawkes-robotino/etc/scripts/gazsim.bash	2016-06-01 13:25:01.307887207 +0200
@@ -9,28 +9,32 @@
 This script starts or kills the a Gazebo-simulation
 
 OPTIONS:
-   -h             Show this message
-   -x start|kill  Start or kill simulation
-   -c arg         Use a specific configuration-folder
-                  in cfg/gazsim-configurations/
-   -n arg         Specify number Robotinos
-   -m arg         load fawkes with the specified (meta-)plugin
-   -a             Run with default CLIPS-agent (don't mix with -m)
-   -l             Run Gazebo headless
-   -k             Keep started shells open after finish
-   -s             Keep statistics and shutdown after game
-   -r             Start with ROS
-   -e arg         Record replay
-   -d             Detailed simulation (e.g. simulated webcam)
-   -o             Omitt starting gazebo (necessary when starting
-                  different teams)
-   -f arg         First Robotino Number (default 1, choose 4 when
-                  starting as magenta)
-   -p arg         Path to the fawkes folder
-                  ($FAWKES_DIR/bin by default)
-   -g             Run Fawkes in gdb
-   -v             Run Fawkes in valgrind
-   -t             Skip Exploration and add all navgraph points
+   -h                Show this message
+   -x start|kill     Start or kill simulation
+   -c arg            Use a specific configuration-folder
+                     in cfg/gazsim-configurations/
+   -n arg            Specify number Robotinos
+   -m arg            load fawkes with the specified (meta-)plugin
+   -a                Run with default CLIPS-agent (don't mix with -m)
+   -l                Run Gazebo headless
+   -k                Keep started shells open after finish
+   -s                Keep statistics and shutdown after game
+   -r|--ros          Start with ROS support
+   --ros-launch-main Run ROS launch file once for main (non-robot) master
+                     Argument: package:file.launch
+                     Calls: roslaunch package file.launch
+   --ros-launch      Run launch file for each robot (on their roscore)
+   -e arg            Record replay
+   -d                Detailed simulation (e.g. simulated webcam)
+   -o                Omitt starting gazebo (necessary when starting
+                     different teams)
+   -f arg            First Robotino Number (default 1, choose 4 when
+                     starting as magenta)
+   -p arg            Path to the fawkes folder
+                     ($FAWKES_DIR/bin by default)
+   -g                Run Fawkes in gdb
+   -v                Run Fawkes in valgrind
+   -t                Skip Exploration and add all navgraph points
 EOF
 }
 
@@ -41,6 +45,8 @@
 CONF=
 VISUALIZATION=
 ROS=
+ROS_LAUNCH_MAIN=
+ROS_LAUNCH_ROBOT=
 AGENT=
 DETAILED=
 KEEP=
@@ -55,43 +61,53 @@
 GDB=
 SKIP_EXPLORATION=
 
-while getopts “hx:c:lrksn:e:dm:aof:p:gvt” OPTION
-do
+OPTS=$(getopt -o "hx:c:lrksn:e:dm:aof:p:gvt" -l "ros,ros-launch-main:,ros-launch:" -- "$@")
+if [ $? != 0 ]
+then
+    echo "Failed to parse parameters"
+    usage
+    exit 1
+fi
+
+eval set -- "$OPTS"
+while true; do
+     OPTION=$1
+     OPTARG=$2
      case $OPTION in
-         h)
+         -h)
              usage
              exit 1
              ;;
-         c)
+         -c)
 	     CONF=-c\ $OPTARG
              ;;
-         l)
+         -l)
 	     VISUALIZATION=-l
              ;;
-         x)
+         -x)
 	     COMMAND=$OPTARG
              ;;
-         k)
+         -k)
 	     KEEP=-k
              ;;
-         r)
+         -r)
 	     ROS=-r
              ;;
-         g)
+         -g)
 	     if [ -n "$GDB" ]; then
 				echo "Can pass only either valgrind or GDB, not both"
         exit
        fi
 	     GDB=-g
              ;;
-         v)
+         -v)
 	     if [ -n "$GDB" ]; then
 				echo "Can pass only either valgrind or GDB, not both"
         exit
        fi
 	     GDB=-v
              ;;
-	 s)
+	 -s)
 	     SHUTDOWN=-s
 	     #done in two steps because otherwise ps would find grep serching for the pattern
 	     PS=$(ps -ef)
@@ -101,45 +117,52 @@
 		 exit
 	     fi
 	     ;;
-	 n)
+	 -n)
 	     NUM_ROBOTINOS=$OPTARG
 	     ;;
-	 e)
+	 -e)
 	     REPLAY="-e $OPTARG"
 	     ;;
-	 d)
+	 -d)
 	     DETAILED="-d"
 	     ;;
-	 m)
+	 -m)
 	     META_PLUGIN="-m $OPTARG"
 	     ;;
-	 a)
+	 -a)
 	     META_PLUGIN="-m gazsim-meta-agent"
 	     ;;
-	 o)
+	 -o)
 	     START_GAZEBO=false
 	     ;;
-	 r)
+	 -r|--ros)
 	     ROS=-r
 	     ;;
-	 f)
+	 --ros-launch-main)
+	     ROS_LAUNCH_MAIN="--ros-launch $OPTARG"
+	     ;;
+	 --ros-launch-robot)
+	     ROS_LAUNCH_ROBOT="--ros-launch $OPTARG"
+	     ;;
+	 -f)
 	     FIRST_ROBOTINO_NUMBER=$OPTARG
 	     ;;
-	 t)
+	 -t)
 	     SKIP_EXPLORATION="-t"
 	     ;;
-	 p)
+	 -p)
 	     FAWKES_BIN=$OPTARG/bin
 	     ;;
-         ?)
-             usage
-             exit
+         --)
+	     break
              ;;
      esac
+     shift
 done
 
 if [[ -z $COMMAND ]]
 then
+     echo "No command given"
      usage
      exit 1
 fi
@@ -205,9 +228,18 @@
 
     if [  "$ROS"  == "-r" ]; then
     	#start roscores
+	# main roscore (non-robot)
+	OPEN_COMMAND="$OPEN_COMMAND --tab -e 'bash -c \"$startup_script_location -x roscore -p ${ROS_MASTER_URI##*:} $KEEP\"'"
+	if [ -n "$ROS_LAUNCH_MAIN" ]; then
+		OPEN_COMMAND="$OPEN_COMMAND --tab -e 'bash -c \"$startup_script_location -x roslaunch $ROS_LAUNCH_MAIN -p ${ROS_MASTER_URI##*:} $KEEP\"'"
+	fi
     	for ((ROBO=$FIRST_ROBOTINO_NUMBER ; ROBO<$(($FIRST_ROBOTINO_NUMBER+$NUM_ROBOTINOS)) ;ROBO++))
     	do
-	    OPEN_COMMAND="$OPEN_COMMAND --tab -e 'bash -c \"$startup_script_location -x roscore -p 1131$ROBO $KEEP\"'"
+	    # robot roscore
+	    OPEN_COMMAND="$OPEN_COMMAND --tab -e 'bash -c \"$startup_script_location -x roscore -p 1132$ROBO $KEEP\"'"
+	    if [ -n "$ROS_LAUNCH_ROBOT" ]; then
+		OPEN_COMMAND="$OPEN_COMMAND --tab -e 'bash -c \"$startup_script_location -x roslaunch $ROS_LAUNCH_ROBOT -p $ROS_MASTER_URI $KEEP\"'"
+	    fi
     	done
     fi
 
@@ -222,13 +254,13 @@
     #start fawkes for robotinos
     for ((ROBO=$FIRST_ROBOTINO_NUMBER ; ROBO<$(($FIRST_ROBOTINO_NUMBER+$NUM_ROBOTINOS)) ;ROBO++))
     do
-	OPEN_COMMAND="$OPEN_COMMAND --tab -e 'bash -c \"export TAB_START_TIME=$(date +%s); $script_path/wait-at-first-start.bash 10; $startup_script_location -x fawkes -p 1131$ROBO -i robotino$ROBO $KEEP $CONF $ROS $GDB $META_PLUGIN $DETAILED -f $FAWKES_BIN $SKIP_EXPLORATION\"'"
+	OPEN_COMMAND="$OPEN_COMMAND --tab -e 'bash -c \"export TAB_START_TIME=$(date +%s); $script_path/wait-at-first-start.bash 10; $startup_script_location -x fawkes -p 1132$ROBO -i robotino$ROBO $KEEP $CONF $ROS $GDB $META_PLUGIN $DETAILED -f $FAWKES_BIN $SKIP_EXPLORATION\"'"
     done
 
     if $START_GAZEBO
     then
     	#start fawkes for communication, llsfrbcomm and eventually statistics
-	OPEN_COMMAND="$OPEN_COMMAND --tab -e 'bash -c \"export TAB_START_TIME=$(date +%s); $script_path/wait-at-first-start.bash 5; $startup_script_location -x comm -p 11311 $KEEP $SHUTDOWN\"'"
+	OPEN_COMMAND="$OPEN_COMMAND --tab -e 'bash -c \"export TAB_START_TIME=$(date +%s); $script_path/wait-at-first-start.bash 5; $startup_script_location -x comm $KEEP $SHUTDOWN\"'"
     fi
 
     # open windows
diff -ur fawkes-robotino.p1/etc/scripts/gazsim-startup.bash fawkes-robotino/etc/scripts/gazsim-startup.bash
--- fawkes-robotino.p1/etc/scripts/gazsim-startup.bash	2016-06-01 13:12:29.457500928 +0200
+++ fawkes-robotino/etc/scripts/gazsim-startup.bash	2016-06-01 13:22:33.682847873 +0200
@@ -19,6 +19,8 @@
    -c arg         Use a specific configuration-folder
                   in cfg/gazsim-configurations/
    -r             Start with ros
+   --ros-launch-main  Run launch file for main (non-robot) roscore
+   --ros-launch   Run launch file for robot roscore
    -s             Keep statistics and shutdown after game
    -i robotino[1|2|3]
                   Robotino instance
@@ -40,6 +42,7 @@
 COMMAND=
 CONF=gazsim-configurations/default
 ROS=-no-ros
+ROS_LAUNCH=
 SHUTDOWN=
 PORT=11311
 ROBOTINO=
@@ -51,75 +54,89 @@
 GDB=
 SKIP_EXPLORATION=
 
-while getopts “hx:c:lrm:sp:i:f:e:da4kgvt” OPTION
-do
+OPTS=$(getopt -o "hx:c:lrksn:e:dm:aof:p:gvi:t" -l "ros,ros-launch:" -- "$@")
+if [ $? != 0 ]
+then
+    echo "Failed to parse parameters"
+    usage
+    exit 1
+fi
+
+eval set -- "$OPTS"
+while true; do
+     OPTION=$1
+     OPTARG=$2
      case $OPTION in
-         h)
+         -h)
              usage
              exit 1
              ;;
-         c)
+         -c)
 	     CONF=gazsim-configurations/$OPTARG
              ;;
-         x)
+         -x)
 	     COMMAND=$OPTARG
              ;;
-	 r)
+	 -r|--ros)
 	     ROS=-ros
 	     ;;
-	 g)
+	 --ros-launch)
+	     ROS_LAUNCH="$OPTARG"
+	     ;;
+	 -g)
 	     if [ -n "$GDB" ]; then
 				echo "Can pass only either valgrind or GDB, not both"
         exit
        fi
 	     GDB="gdb -ex run --args"
 	     ;;
-	 v)
+	 -v)
 	     if [ -n "$GDB" ]; then
 				echo "Can pass only either valgrind or GDB, not both"
         exit
        fi
 	     GDB="valgrind --verbose"
 	     ;;
-	 s)
+	 -s)
 	     SHUTDOWN=,mongodb,gazsim-llsf-statistics,gazsim-llsf-control
 	     ;;
-	 p)
+	 -p)
 	     PORT=$OPTARG
 	     ;;
-	 i)
+	 -i)
 	     ROBOTINO=$OPTARG
 	     ;;
-	 e)
+	 -e)
 	     REPLAY=-r\ --record_path\ $OPTARG
 	     ;;
-	 d)
+	 -d)
 	     VISION=,gazsim-meta-robotino-vision-low-level
 	     ;;
-	 a)
+	 -a)
 	     AGENT=,gazsim-meta-agent
 	     ;;
-         k)
+         -k)
              KEEP=yes
              ;;
-         m)
+         -m)
              META_PLUGIN=,$OPTARG
              ;;
-	 t)
+	 -t)
 	     SKIP_EXPLORATION=",gazsim-navgraph-generator"
 	     ;;
-	 f)
+	 -f)
 	     FAWKES_BIN=$OPTARG
 	     ;;
-         ?)
-             usage
-             exit
+         --)
+             break
              ;;
      esac
+     shift
 done
 
 if [[ -z $COMMAND ]]
 then
+     echo "No command given"
      usage
      exit 1
 fi
@@ -169,6 +186,10 @@
 	export ROS_MASTER_URI=http://localhost:$PORT
 	roscore -p $PORT
 	;;
+    roslaunch)
+	export ROS_MASTER_URI=http://localhost:$PORT
+	roslaunch --wait ${ROS_LAUNCH%:*} ${ROS_LAUNCH##*:}
+	;;
     move_base ) 
 	export ROS_MASTER_URI=http://localhost:$PORT
 	#rosparam set /use_sim_time true
